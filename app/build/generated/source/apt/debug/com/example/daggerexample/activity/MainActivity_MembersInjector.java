// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.example.daggerexample.activity;

import com.example.daggerexample.model.CredentialModel;
import com.example.daggerexample.model.LoginModel;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<LoginModel> loginModelProvider;

  private final Provider<CredentialModel> credentialModelProvider;

  public MainActivity_MembersInjector(
      Provider<LoginModel> loginModelProvider, Provider<CredentialModel> credentialModelProvider) {
    assert loginModelProvider != null;
    this.loginModelProvider = loginModelProvider;
    assert credentialModelProvider != null;
    this.credentialModelProvider = credentialModelProvider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<LoginModel> loginModelProvider, Provider<CredentialModel> credentialModelProvider) {
    return new MainActivity_MembersInjector(loginModelProvider, credentialModelProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.loginModel = loginModelProvider.get();
    instance.credentialModel = credentialModelProvider.get();
  }
}
